services:
  db:
    image: postgres:15-alpine
    container_name: my_postgres
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
      POSTGRES_DB: "${DB_NAME}"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: booking_redis

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  booking:
    image: booking_app
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "9000:8000"

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
      
volumes:
  postgresdata:
  grafanadata:
  prometheusdata: